// Guardi√°n de autenticaci√≥n para proteger el panel de administraci√≥n
import { auth } from './firebase-config.js';

console.log('üõ°Ô∏è Inicializando guardi√°n de autenticaci√≥n...');

// Ocultar el contenido inicialmente
document.body.style.display = 'none';

// Funci√≥n para verificar autenticaci√≥n
function verificarAutenticacion() {
  console.log('üîç Verificando estado de autenticaci√≥n...');
  
  auth.onAuthStateChanged((user) => {
    if (!user) {
          console.log('‚ùå Usuario no autenticado, redirigiendo a login...');
    if (window.router) {
      window.router.navigate('/login');
    } else {
      window.location.href = '/login';
    }
      return;
    }
    
    console.log('‚úÖ Usuario autenticado:', user.email);
    
    // Mostrar informaci√≥n del usuario en el header
    const userInfoElement = document.getElementById('user-info');
    if (userInfoElement) {
      userInfoElement.innerHTML = `
        <span class="user-email">
          <i class="fas fa-user"></i>
          ${user.email}
        </span>
      `;
    }
    
    // Mostrar el contenido de la p√°gina
    document.body.style.display = 'flex';
    console.log('‚úÖ Acceso autorizado al panel de administraci√≥n');
  });
}

// Funci√≥n para cerrar sesi√≥n
window.cerrarSesion = async function() {
  console.log('üö™ Cerrando sesi√≥n...');
  
  try {
    const { signOut } = await import('https://www.gstatic.com/firebasejs/10.7.1/firebase-auth.js');
    await signOut(auth);
    
    console.log('‚úÖ Sesi√≥n cerrada exitosamente');
    if (window.router) {
      window.router.navigate('/login');
    } else {
      window.location.href = '/login';
    }
  } catch (error) {
    console.error('‚ùå Error al cerrar sesi√≥n:', error);
    alert('Error al cerrar sesi√≥n. Por favor, int√©ntalo de nuevo.');
  }
};

// Inicializar verificaci√≥n cuando el DOM est√© listo
document.addEventListener('DOMContentLoaded', () => {
  verificarAutenticacion();
}); 